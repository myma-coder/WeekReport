<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd">

  <context:property-placeholder location="/WEB-INF/jdbc.properties"/>

  <!-- 扫描类包，将标注 Spring 注解的类自动转化 Bean，同时完成 Bean 的注入 -->
  <context:component-scan base-package="com.zn.wr.controller"/>
  <context:component-scan base-package="com.zn.wr.dao"/>

  <!-- 配置数据源 -->
  <!-- C3P0 是一个开放源代码的 JDBC 连接池-->
  <!--C3P0 包括了实现 jdbc3 和 jdbc2 扩展规范说明的 Connection 和 Statement 池的 DataSources 对象，它实现了数据源和 JNDI 绑定，支持 JDBC3 规范和 JDBC2 的标准扩展。-->
  <!--c3p0 所需 jar：c3p0-0.9.2.1.jar mchange-commons-java-0.2.3.4.jar-->
  <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
        destroy-method="close">
    <property name="driverClass">
      <value>${jdbc.driverClassName}</value>
    </property>
    <property name="jdbcUrl">
      <value>${jdbc.url}</value>
    </property>
    <property name="user">
      <value>${jdbc.username}</value>
    </property>
    <property name="password">
      <value>${jdbc.password}</value>
    </property>
    <!--连接池中保留的最小连接数。-->
    <property name="minPoolSize">
      <value>5</value>
    </property>
    <!--连接池中保留的最大连接数。Default: 15 -->
    <property name="maxPoolSize">
      <value>30</value>
    </property>
    <!--初始化时获取的连接数，取值应在 minPoolSize 与 maxPoolSize 之间。Default: 3 -->
    <property name="initialPoolSize">
      <value>10</value>
    </property>
    <!--最大空闲时间，60 秒内未使用则连接被丢弃。若为 0 则永不丢弃。Default: 0 -->
    <property name="maxIdleTime">
      <value>60</value>
    </property>
    <!--当连接池中的连接耗尽的时候 c3p0 一次同时获取的连接数。Default: 3 -->
    <property name="acquireIncrement">
      <value>5</value>
    </property>
    <!--JDBC 的标准参数，用以控制数据源内加载的PreparedStatements 数量。但由于预缓存的 statements 属于单个 connection 而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。
        如果 maxStatements 与 maxStatementsPerConnection 均为0，则缓存被关闭。Default: 0 -->
    <property name="maxStatements">
      <value>0</value>
    </property>
    <!--每 60 秒检查所有连接池中的空闲连接。Default: 0 -->
    <property name="idleConnectionTestPeriod">
      <value>60</value>
    </property>
    <!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
    <property name="acquireRetryAttempts">
      <value>30</value>
    </property>
    <!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效 保留，并在下次调用 getConnection() 的时候继续尝试获取连接。如果设为 true，那么在尝试获取连接失败后该数据源将申明已断开并永久关闭。Default: false -->
    <property name="breakAfterAcquireFailure">
      <value>true</value>
    </property>
    <!--因性能消耗大请只在需要的时候使用它。如果设为 true 那么在每个connection 提交的 时候都将校验其有效性。建议使用 idleConnectionTestPeriod 或 automaticTestTable 等方法来提升连接测试的性能。Default: false -->
    <property name="testConnectionOnCheckout">
      <value>false</value>
    </property>
  </bean>

  <!-- 配置 Jdbc 模板 -->
  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <property name="dataSource" ref="dataSource"/>
  </bean>
</beans>